package org.files2;


import java.io.IOException;
import java.io.ObjectInputStream;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;
import java.util.Formatter;
import java.util.Scanner;

import org.files2.Account;

public class FileMatch {
	
	public static void main(String args[]) throws IOException{
		
		ObjectInputStream inOldMaster= new ObjectInputStream(Files.newInputStream(Paths.get("oldmast.ser")));
		ObjectInputStream inTransaction= new ObjectInputStream(Files.newInputStream(Paths.get("trans.ser")));
		
		Formatter outlog = new Formatter("log.txt");

		
		List<Account> accounts = new ArrayList<Account>();
		while((Account account=inOldMaster.readObject())!=null){
		Account account = new Account();
		account.setAccount(inOldMaster.nextInt());
		account.setFirstName(inOldMaster.next());
		account.setLastName(inOldMaster.next());
		account.setBalance(inOldMaster.nextDouble());
		accounts.add(account);
		}
		
		
		
		while(inTransaction.hasNext()){
		TransactionRecord transaction = new TransactionRecord();
		transaction.setAccountNumber(inTransaction.nextInt());
		transaction.setAmount(inTransaction.nextDouble());
		boolean isAccountMatch=false;
		for(Account account: accounts){
			if(account.getAccount()==transaction.getAccountNumber()){
				account.combine(transaction);
				isAccountMatch=true;
			}
		}	
		if(!isAccountMatch){
			outlog.format("%s %n", "Unmatched transaction record for account number.."+transaction.getAccountNumber());
		}
		}
	
		
		
		Formatter newMaster = new Formatter("newmast.txt");
		for(Account account:accounts){
			newMaster.format("%d %s %s %.2f%n",account.getAccount(), account.getFirstName(), account.getLastName(), account.getBalance());
		}
		newMaster.close();
		outlog.close();
		
		
	}
		
	}


